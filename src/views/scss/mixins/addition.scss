@import "views/scss/variables";
@import "views/scss/mixins/setAttribute";

/* notify */
@mixin notify($textHeight, $imgHeight, $fontSize: 1.5em) {
  @include setFont($fontSize, white);
  [class^="notify"] {
    @include setFlex(column, center, center);
    @include setSize(100%, 100%);
    > main {
      @include setFlex(column, space-around, center);
      @include setSize(100%, $textHeight);
    }
    > img {
      height: $imgHeight;
    }
  }
}

/* dial */
@mixin tooltip($type) {
  > article {
    position: relative;
    .tooltip {
      visibility: hidden;
      transition: 0.125s ease;

      @if $type == top {
        @include setAbsolute(0, null, null, null);
        @include setBlank(-8px 0, 4px 8px);
        transform: scale(0);
      } @else if $type == right {
        @include setAbsolute(null, 0, null, null);
        @include setBlank(0 -8px, 4px 8px);
      } @else if $type == bottom {
        @include setAbsolute(null, null, 0, null);
        @include setBlank(-8px 0, 4px 8px);
        transform: scale(0) translate(0, 100%);
      } @else if $type == left {
        @include setAbsolute(null, null, null, 0);
        @include setBlank(0 -8px, 4px 8px);
        transform: scale(0) translate(-100%, 0);
      }

      @include setSize(max-content, null);
      @include setFont(12px, white, null, "NanumBarunGothic");
      text-align: center;
      @include setBorder(null, 4px);
      background-color: #666666;
    }
  }
  &:hover .tooltip {
    visibility: visible;
    transition-delay: 0.5s;

    @if $type == top {
      transform: scale(1) translate(0, -100%);
    } @else if $type == right {
      transform: scale(1) translate(100%, 0);
    } @else if $type == bottom {
      transform: scale(1) translate(0, 100%);
    } @else if $type == left {
      transform: scale(1) translate(-100%, 0);
    }
  }
}

@mixin speedDial($flexDirection: column, $type: bottom, $pointClassName: "") {
  @include setFlex($flexDirection, null, center);
  > aside {
    cursor: pointer;
    @include setFont(36px);
    @include tooltip($type);
    > article {
      @include setFlex(null, center, center);
      @include setSize(40px, 40px);
      @include setBlank(8px);
      @include setBorder(null, 50%);
      @include setShadow("box");
      @include setButtonANI($default-color, $main-color);
    }
    .#{$pointClassName} {
      color: $default-color;
      @include setButtonANI($sub-color, $sub-bright-color);
    }
  }
}

/* button */
@mixin closeButton($type) {
  @if $type == "dialog" {
    position: relative;
  }
  > [class$="close-button"] {
    cursor: pointer;
    @include setSize(32px, null, 1);
    z-index: 1;
    @if $type == "album" {
      @include setAbsolute(null, 0.75em, null, null);
      @include setFlex(null, flex-end, center);
      @include setBlank(0 0 0 0.75em);
    } @else if $type == "dialog" {
      @include setAbsolute(8px, 8px, null, null);
    }
    > svg {
      @include setFont(2em, $default-color);
    }
  }
}

/* kakao */
@mixin kakaoMap {
  @include setSize(100%, 100%);
  @include setBorder(2px, 10px, white);
  box-sizing: border-box;

  [class$="tooltip"] {
    position: relative;
    @include setFont(0.875em, black);
    @include setBorder(1px, 10px);
    padding: 0.5em;
    background-color: white;

    [class$="title"] {
      @include setSize(fit-content, fit-content);
      @include setBlank(auto);
      @include setFont(1.125em);
    }
    [class$="content"] {
      @include setFlex(column, center, center);
      @include setSize(fit-content, fit-content);
      @include setBlank(auto);
    }
    > hr {
      margin: 0.125em;
    }
    &::before {
      @include tooltipArrow("before", 0.625em, black);
    }
    &::after {
      @include tooltipArrow("after", 0.625em, white);
    }
  }
}

@mixin tooltipArrow($type, $margin, $color) {
  content: "";
  @include setAbsolute(null, null, 0, 50%);
  @include setSize(0, 0);

  border: $margin solid transparent;
  border-bottom: 0;
  border-top-color: $color;

  margin-left: -$margin;
  @if $type == "before" {
    margin-bottom: calc(-#{$margin} + 0.125em - 1px);
  } @else if $type == "after" {
    margin-bottom: calc(-#{$margin} + 0.125em);
  }
}
